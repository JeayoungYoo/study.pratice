-- PL/SQL 테스트

-- 화면 출력이 되게 하려면 
SET SERVEROUTPUT ON;

-- 익명 블럭


DECLARE
    box NUMBER;
BEGIN
    SELECT empno
    INTO box
    FROM emp
    WHERE ename='WORD';
    DBMS_OUTPUT.PUT_LINE(box);
EXCEPTION
    WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('No Data!!!');
END;
/

SHOW ERRORS;

-- 사번을 입력받아, 해당 직원의 부서번호로 직무 출력하기
-- IF 조건 THEN 참일때 처리내용 END IF;

DECLARE
VEMPNO EMP.EMPNO%TYPE;
VENAME EMP.ENAME%TYPE;
VDEPTNO EMP.DEPTNO%TYPE;
VDNAME VARCHAR2(20) := NULL;
BEGIN
SELECT EMPNO, ENAME, DEPTNO
INTO VEMPNO, VENAME, VDEPTNO
FROM EMP
WHERE EMPNO = '&EMPNO';
IF (VDEPTNO = 10) THEN
VDNAME := 'ACCOUNTING';
END IF;
IF (VDEPTNO = 20) THEN
VDNAME := 'RESEARCH';
END IF;
IF (VDEPTNO = 30) THEN
VDNAME := 'SALES';
END IF;
IF (VDEPTNO = 40) THEN
VDNAME := 'OPERATIONS';
END IF;
DBMS_OUTPUT.PUT_LINE('사번    이름  부서명');
DBMS_OUTPUT.PUT_LINE('--------------------------------------');
DBMS_OUTPUT.PUT_LINE(VEMPNO || '    ' || VENAME || '    ' || VDNAME);
END;
/

DECLARE
    VEMP EMP%ROWTYPE;
    ANNSAL NUMBER(7, 2);
BEGIN
    SELECT * INTO VEMP
    FROM EMP
    WHERE ENAME = '&ENAME';
    IF (VEMP.COMM IS NULL) THEN
    ANNSAL := VEMP.SAL * 12;
    ELSE
    ANNSAL := VEMP.SAL * 12 + VEMP.COMM;
    END IF;
    DBMS_OUTPUT.PUT_LINE('사번    이름  연봉');
    DBMS_OUTPUT.PUT_LINE('--------------------------------------');
    DBMS_OUTPUT.PUT_LINE(VEMP.EMPNO || '    ' || VEMP.ENAME || '    ' || ANNSAL);
END;
/

DECLARE
    VEMPNO EMP.EMPNO%TYPE;
    VCOMM EMP.COMM%TYPE;
    VENAME EMP.ENAME%TYPE;
BEGIN
    SELECT EMPNO, ENAME, COMM
    INTO VEMPNO, VENAME, VCOMM
    FROM EMP
    WHERE EMPNO = &EMPNO;
    
    IF (VCOMM IS NULL OR VCOMM = 0) THEN
        DBMS_OUTPUT.PUT_LINE('사번'||VEMPNO||'은 '||VENAME||'사원이고 커미션을 받지 않습니다.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('사번'||VEMPNO||'은 '||VENAME||'사원이고'||VCOMM||'을 받습니다.');
    END IF;
END;
/

DECLARE
    VEMP EMP%ROWTYPE;
    VDNAME VARCHAR2(14);
BEGIN
    SELECT * INTO VEMP
    FROM EMP
    WHERE ENAME = '&ENAME';
    
    IF (VEMP.DEPTNO = 10) THEN VDNAME := 'ACCOUNTING';
    ELSIF (VEMP.DEPTNO = 20) THEN VDNAME := 'RESEARCH';
    ELSIF (VEMP.DEPTNO = 30) THEN VDNAME := 'SALES';
    ELSIF (VEMP.DEPTNO = 40) THEN VDNAME := 'OPERATIONS';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('사번    이름    부서명');
    DBMS_OUTPUT.PUT_LINE('---------------------');
    DBMS_OUTPUT.PUT_LINE(VEMP.EMPNO||'  '||VEMP.ENAME||'    '||VDNAME);

END;
/

DECLARE
    SCORE NUMBER;
    GRADE VARCHAR2(2);
BEGIN
    SCORE := &SCORE;
    
    IF (SCORE>=90) THEN GRADE:= 'A';
    ELSIF (SCORE>=80) THEN GRADE:= 'B';
    ELSIF (SCORE>=70) THEN GRADE:= 'C';
    ELSIF (SCORE>=60) THEN GRADE:= 'D';
    ELSE GRADE:='F';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('당신의 SCORE는 ' || SCORE || '점이고, GRADE는 ' || GRADE || '입니다.');
END;
/

DECLARE
    VEMPNO EMP.EMPNO%TYPE;
    VENAME EMP.ENAME%TYPE;
    VDEPTNO EMP.DEPTNO%TYPE;
    VDNAME VARCHAR(20) := NULL;
BEGIN
    SELECT EMPNO, ENAME, DEPTNO
    INTO VEMPNO, VENAME, VDEPTNO
    FROM EMP
    WHERE EMPNO = &EMPNO;
    
    VDNAME := CASE VDEPTNO
        WHEN 10 THEN 'ACCOUNT'
        WHEN 20 THEN 'RESEARCH'
        WHEN 30 THEN 'SALES'
        WHEN 40 THEN 'OPERATIONS'
    END;
    
    DBMS_OUTPUT.PUT_LINE(VEMPNO||'   '||VENAME||'    '||VDEPTNO||'   '||VDNAME);
END;
/